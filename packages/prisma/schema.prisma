// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"

}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ---------------------------------------------------------

model Price{
  id                      String     @unique @id
  idEstablishment         String
  idProduct               String
  prices                  Decimal[]
  updateAt                String
  establishment           Establishment @relation(fields: [idEstablishment], references: [id])
  product                 Product       @relation(fields: [idProduct], references: [id])
  // modified                DateTime    @default(now())
}

model Family{
  id                      String     @unique @id
  name                    String
  subFamilies             SubFamily[]
}

model SubFamily{
  id                      String     @unique @id
  group                   String
  idFamily                String
  name                    String
  nameSuggestion          String
  medications             Medication[]
  family                  Family     @relation(fields: [idFamily], references: [id])
}


model Medication{
  id                      String     @unique @id
  concentration           String
  fractions               Int
  idPharmaceuticalForm    String
  idManufacturer          String
  idSubFamily             String
  name                    String
  totalActivePrinciple    String
  products                Product[]
  pharmaceuticalForm      PharmaceuticalForm  @relation(fields: [idPharmaceuticalForm], references: [id])
  manufacturer            Manufacturer        @relation(fields: [idManufacturer], references: [id])
  subFamily               SubFamily           @relation(fields: [idSubFamily], references: [id])
}

model Product{
  id                      String     @unique @id
  idMedication            String
  name                    String     @index(name)
  medication              Medication @relation(fields: [idMedication], references: [id])
  price                   Price[]
  // substance               String
}
model PharmaceuticalForm{
  id                      String     @unique @id
  group                   String
  groupCode               String
  name                    String
  medications             Medication[]
}

model Establishment{
  id                      String     @unique @id
  address                 String
  name                    String
  type                    String
  typeId                  String
  idDistrict              String
  phone                   String?
  district           District  @relation(fields: [idDistrict], references: [id])
  price                   Price[]
}

model Manufacturer{
  id                      String     @unique @id
  name                    String?
  medications            Medication[]
}

model District{
  id                      String     @unique @id
  name                    String
  idProvince              String
  province                Province   @relation(fields: [idProvince], references: [id])
  establishments          Establishment[]
}

model Province{
  id                      String     @unique @id
  name                    String
  idDepartment            String
  department              Department @relation(fields: [idDepartment], references: [id])
  districts               District[]
}

model Department{
  id                      String     @unique @id
  name                    String
  provinces               Province[]
}

